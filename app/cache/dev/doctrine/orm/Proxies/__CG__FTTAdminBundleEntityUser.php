<?php

namespace Proxies\__CG__\FTT\AdminBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class User extends \FTT\AdminBundle\Entity\User implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', 'googleId', 'facebookId', '' . "\0" . 'FTT\\AdminBundle\\Entity\\User' . "\0" . 'nomUser', '' . "\0" . 'FTT\\AdminBundle\\Entity\\User' . "\0" . 'prenomUser', '' . "\0" . 'FTT\\AdminBundle\\Entity\\User' . "\0" . 'ageUser', '' . "\0" . 'FTT\\AdminBundle\\Entity\\User' . "\0" . 'imageUser', '' . "\0" . 'FTT\\AdminBundle\\Entity\\User' . "\0" . 'telUser', '' . "\0" . 'FTT\\AdminBundle\\Entity\\User' . "\0" . 'numCompteBancaireAdherent', '' . "\0" . 'FTT\\AdminBundle\\Entity\\User' . "\0" . 'pointsAdherent', '' . "\0" . 'FTT\\AdminBundle\\Entity\\User' . "\0" . 'soldeAdherent', '' . "\0" . 'FTT\\AdminBundle\\Entity\\User' . "\0" . 'immatricule', '' . "\0" . 'FTT\\AdminBundle\\Entity\\User' . "\0" . 'departementAdmin', '' . "\0" . 'FTT\\AdminBundle\\Entity\\User' . "\0" . 'categorieArbitre', '' . "\0" . 'FTT\\AdminBundle\\Entity\\User' . "\0" . 'specialiteMedecin', '' . "\0" . 'FTT\\AdminBundle\\Entity\\User' . "\0" . 'quotaResponsable', 'recaptcha', 'username', 'usernameCanonical', 'email', 'emailCanonical', 'enabled', 'salt', 'password', 'plainPassword', 'lastLogin', 'confirmationToken', 'passwordRequestedAt', 'groups', 'locked', 'expired', 'expiresAt', 'roles', 'credentialsExpired', 'credentialsExpireAt'];
        }

        return ['__isInitialized__', 'id', 'googleId', 'facebookId', '' . "\0" . 'FTT\\AdminBundle\\Entity\\User' . "\0" . 'nomUser', '' . "\0" . 'FTT\\AdminBundle\\Entity\\User' . "\0" . 'prenomUser', '' . "\0" . 'FTT\\AdminBundle\\Entity\\User' . "\0" . 'ageUser', '' . "\0" . 'FTT\\AdminBundle\\Entity\\User' . "\0" . 'imageUser', '' . "\0" . 'FTT\\AdminBundle\\Entity\\User' . "\0" . 'telUser', '' . "\0" . 'FTT\\AdminBundle\\Entity\\User' . "\0" . 'numCompteBancaireAdherent', '' . "\0" . 'FTT\\AdminBundle\\Entity\\User' . "\0" . 'pointsAdherent', '' . "\0" . 'FTT\\AdminBundle\\Entity\\User' . "\0" . 'soldeAdherent', '' . "\0" . 'FTT\\AdminBundle\\Entity\\User' . "\0" . 'immatricule', '' . "\0" . 'FTT\\AdminBundle\\Entity\\User' . "\0" . 'departementAdmin', '' . "\0" . 'FTT\\AdminBundle\\Entity\\User' . "\0" . 'categorieArbitre', '' . "\0" . 'FTT\\AdminBundle\\Entity\\User' . "\0" . 'specialiteMedecin', '' . "\0" . 'FTT\\AdminBundle\\Entity\\User' . "\0" . 'quotaResponsable', 'recaptcha', 'username', 'usernameCanonical', 'email', 'emailCanonical', 'enabled', 'salt', 'password', 'plainPassword', 'lastLogin', 'confirmationToken', 'passwordRequestedAt', 'groups', 'locked', 'expired', 'expiresAt', 'roles', 'credentialsExpired', 'credentialsExpireAt'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (User $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getNomUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNomUser', []);

        return parent::getNomUser();
    }

    /**
     * {@inheritDoc}
     */
    public function getPrenomUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrenomUser', []);

        return parent::getPrenomUser();
    }

    /**
     * {@inheritDoc}
     */
    public function getAgeUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAgeUser', []);

        return parent::getAgeUser();
    }

    /**
     * {@inheritDoc}
     */
    public function getImageUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImageUser', []);

        return parent::getImageUser();
    }

    /**
     * {@inheritDoc}
     */
    public function getTelUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTelUser', []);

        return parent::getTelUser();
    }

    /**
     * {@inheritDoc}
     */
    public function getNumCompteBancaireAdherent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNumCompteBancaireAdherent', []);

        return parent::getNumCompteBancaireAdherent();
    }

    /**
     * {@inheritDoc}
     */
    public function getPointsAdherent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPointsAdherent', []);

        return parent::getPointsAdherent();
    }

    /**
     * {@inheritDoc}
     */
    public function getSoldeAdherent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSoldeAdherent', []);

        return parent::getSoldeAdherent();
    }

    /**
     * {@inheritDoc}
     */
    public function getImmatricule()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImmatricule', []);

        return parent::getImmatricule();
    }

    /**
     * {@inheritDoc}
     */
    public function getDepartementAdmin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDepartementAdmin', []);

        return parent::getDepartementAdmin();
    }

    /**
     * {@inheritDoc}
     */
    public function getCategorieArbitre()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategorieArbitre', []);

        return parent::getCategorieArbitre();
    }

    /**
     * {@inheritDoc}
     */
    public function getSpecialiteMedecin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSpecialiteMedecin', []);

        return parent::getSpecialiteMedecin();
    }

    /**
     * {@inheritDoc}
     */
    public function getQuotaResponsable()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getQuotaResponsable', []);

        return parent::getQuotaResponsable();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function setNomUser($nomUser)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNomUser', [$nomUser]);

        return parent::setNomUser($nomUser);
    }

    /**
     * {@inheritDoc}
     */
    public function setPrenomUser($prenomUser)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrenomUser', [$prenomUser]);

        return parent::setPrenomUser($prenomUser);
    }

    /**
     * {@inheritDoc}
     */
    public function setAgeUser($ageUser)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAgeUser', [$ageUser]);

        return parent::setAgeUser($ageUser);
    }

    /**
     * {@inheritDoc}
     */
    public function setImageUser($imageUser)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImageUser', [$imageUser]);

        return parent::setImageUser($imageUser);
    }

    /**
     * {@inheritDoc}
     */
    public function setTelUser($telUser)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTelUser', [$telUser]);

        return parent::setTelUser($telUser);
    }

    /**
     * {@inheritDoc}
     */
    public function setNumCompteBancaireAdherent($numCompteBancaireAdherent)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNumCompteBancaireAdherent', [$numCompteBancaireAdherent]);

        return parent::setNumCompteBancaireAdherent($numCompteBancaireAdherent);
    }

    /**
     * {@inheritDoc}
     */
    public function setPointsAdherent($pointsAdherent)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPointsAdherent', [$pointsAdherent]);

        return parent::setPointsAdherent($pointsAdherent);
    }

    /**
     * {@inheritDoc}
     */
    public function setSoldeAdherent($soldeAdherent)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSoldeAdherent', [$soldeAdherent]);

        return parent::setSoldeAdherent($soldeAdherent);
    }

    /**
     * {@inheritDoc}
     */
    public function setImmatricule($immatricule)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImmatricule', [$immatricule]);

        return parent::setImmatricule($immatricule);
    }

    /**
     * {@inheritDoc}
     */
    public function setDepartementAdmin($departementAdmin)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDepartementAdmin', [$departementAdmin]);

        return parent::setDepartementAdmin($departementAdmin);
    }

    /**
     * {@inheritDoc}
     */
    public function setCategorieArbitre($categorieArbitre)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCategorieArbitre', [$categorieArbitre]);

        return parent::setCategorieArbitre($categorieArbitre);
    }

    /**
     * {@inheritDoc}
     */
    public function setSpecialiteMedecin($specialiteMedecin)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSpecialiteMedecin', [$specialiteMedecin]);

        return parent::setSpecialiteMedecin($specialiteMedecin);
    }

    /**
     * {@inheritDoc}
     */
    public function setQuotaResponsable($quotaResponsable)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setQuotaResponsable', [$quotaResponsable]);

        return parent::setQuotaResponsable($quotaResponsable);
    }

    /**
     * {@inheritDoc}
     */
    public function getGoogleId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGoogleId', []);

        return parent::getGoogleId();
    }

    /**
     * {@inheritDoc}
     */
    public function setGoogleId($googleId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGoogleId', [$googleId]);

        return parent::setGoogleId($googleId);
    }

    /**
     * {@inheritDoc}
     */
    public function getRecaptcha()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRecaptcha', []);

        return parent::getRecaptcha();
    }

    /**
     * {@inheritDoc}
     */
    public function setRecaptcha($recaptcha)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRecaptcha', [$recaptcha]);

        return parent::setRecaptcha($recaptcha);
    }

    /**
     * {@inheritDoc}
     */
    public function getFacebookId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFacebookId', []);

        return parent::getFacebookId();
    }

    /**
     * {@inheritDoc}
     */
    public function setFacebookId($facebookId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFacebookId', [$facebookId]);

        return parent::setFacebookId($facebookId);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function addRole($role)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addRole', [$role]);

        return parent::addRole($role);
    }

    /**
     * {@inheritDoc}
     */
    public function serialize()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'serialize', []);

        return parent::serialize();
    }

    /**
     * {@inheritDoc}
     */
    public function unserialize($serialized)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'unserialize', [$serialized]);

        return parent::unserialize($serialized);
    }

    /**
     * {@inheritDoc}
     */
    public function eraseCredentials()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'eraseCredentials', []);

        return parent::eraseCredentials();
    }

    /**
     * {@inheritDoc}
     */
    public function getUsername()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsername', []);

        return parent::getUsername();
    }

    /**
     * {@inheritDoc}
     */
    public function getUsernameCanonical()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsernameCanonical', []);

        return parent::getUsernameCanonical();
    }

    /**
     * {@inheritDoc}
     */
    public function getSalt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSalt', []);

        return parent::getSalt();
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', []);

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function getEmailCanonical()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmailCanonical', []);

        return parent::getEmailCanonical();
    }

    /**
     * {@inheritDoc}
     */
    public function getPassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPassword', []);

        return parent::getPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function getPlainPassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPlainPassword', []);

        return parent::getPlainPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function getLastLogin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastLogin', []);

        return parent::getLastLogin();
    }

    /**
     * {@inheritDoc}
     */
    public function getConfirmationToken()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConfirmationToken', []);

        return parent::getConfirmationToken();
    }

    /**
     * {@inheritDoc}
     */
    public function getEnabled()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEnabled', []);

        return parent::getEnabled();
    }

    /**
     * {@inheritDoc}
     */
    public function getRoles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoles', []);

        return parent::getRoles();
    }

    /**
     * {@inheritDoc}
     */
    public function hasRole($role)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasRole', [$role]);

        return parent::hasRole($role);
    }

    /**
     * {@inheritDoc}
     */
    public function isAccountNonExpired()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isAccountNonExpired', []);

        return parent::isAccountNonExpired();
    }

    /**
     * {@inheritDoc}
     */
    public function isAccountNonLocked()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isAccountNonLocked', []);

        return parent::isAccountNonLocked();
    }

    /**
     * {@inheritDoc}
     */
    public function isCredentialsNonExpired()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isCredentialsNonExpired', []);

        return parent::isCredentialsNonExpired();
    }

    /**
     * {@inheritDoc}
     */
    public function isCredentialsExpired()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isCredentialsExpired', []);

        return parent::isCredentialsExpired();
    }

    /**
     * {@inheritDoc}
     */
    public function isEnabled()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isEnabled', []);

        return parent::isEnabled();
    }

    /**
     * {@inheritDoc}
     */
    public function isExpired()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isExpired', []);

        return parent::isExpired();
    }

    /**
     * {@inheritDoc}
     */
    public function isLocked()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isLocked', []);

        return parent::isLocked();
    }

    /**
     * {@inheritDoc}
     */
    public function isSuperAdmin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isSuperAdmin', []);

        return parent::isSuperAdmin();
    }

    /**
     * {@inheritDoc}
     */
    public function removeRole($role)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeRole', [$role]);

        return parent::removeRole($role);
    }

    /**
     * {@inheritDoc}
     */
    public function setUsername($username)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUsername', [$username]);

        return parent::setUsername($username);
    }

    /**
     * {@inheritDoc}
     */
    public function setUsernameCanonical($usernameCanonical)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUsernameCanonical', [$usernameCanonical]);

        return parent::setUsernameCanonical($usernameCanonical);
    }

    /**
     * {@inheritDoc}
     */
    public function setCredentialsExpireAt(\DateTime $date = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCredentialsExpireAt', [$date]);

        return parent::setCredentialsExpireAt($date);
    }

    /**
     * {@inheritDoc}
     */
    public function setCredentialsExpired($boolean)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCredentialsExpired', [$boolean]);

        return parent::setCredentialsExpired($boolean);
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail($email)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', [$email]);

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function setEmailCanonical($emailCanonical)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmailCanonical', [$emailCanonical]);

        return parent::setEmailCanonical($emailCanonical);
    }

    /**
     * {@inheritDoc}
     */
    public function setEnabled($boolean)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEnabled', [$boolean]);

        return parent::setEnabled($boolean);
    }

    /**
     * {@inheritDoc}
     */
    public function setExpired($boolean)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExpired', [$boolean]);

        return parent::setExpired($boolean);
    }

    /**
     * {@inheritDoc}
     */
    public function setExpiresAt(\DateTime $date = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExpiresAt', [$date]);

        return parent::setExpiresAt($date);
    }

    /**
     * {@inheritDoc}
     */
    public function setPassword($password)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPassword', [$password]);

        return parent::setPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function setSuperAdmin($boolean)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSuperAdmin', [$boolean]);

        return parent::setSuperAdmin($boolean);
    }

    /**
     * {@inheritDoc}
     */
    public function setPlainPassword($password)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPlainPassword', [$password]);

        return parent::setPlainPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function setLastLogin(\DateTime $time = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastLogin', [$time]);

        return parent::setLastLogin($time);
    }

    /**
     * {@inheritDoc}
     */
    public function setLocked($boolean)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLocked', [$boolean]);

        return parent::setLocked($boolean);
    }

    /**
     * {@inheritDoc}
     */
    public function setConfirmationToken($confirmationToken)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setConfirmationToken', [$confirmationToken]);

        return parent::setConfirmationToken($confirmationToken);
    }

    /**
     * {@inheritDoc}
     */
    public function setPasswordRequestedAt(\DateTime $date = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPasswordRequestedAt', [$date]);

        return parent::setPasswordRequestedAt($date);
    }

    /**
     * {@inheritDoc}
     */
    public function getPasswordRequestedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPasswordRequestedAt', []);

        return parent::getPasswordRequestedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function isPasswordRequestNonExpired($ttl)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isPasswordRequestNonExpired', [$ttl]);

        return parent::isPasswordRequestNonExpired($ttl);
    }

    /**
     * {@inheritDoc}
     */
    public function setRoles(array $roles)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRoles', [$roles]);

        return parent::setRoles($roles);
    }

    /**
     * {@inheritDoc}
     */
    public function getGroups()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGroups', []);

        return parent::getGroups();
    }

    /**
     * {@inheritDoc}
     */
    public function getGroupNames()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGroupNames', []);

        return parent::getGroupNames();
    }

    /**
     * {@inheritDoc}
     */
    public function hasGroup($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasGroup', [$name]);

        return parent::hasGroup($name);
    }

    /**
     * {@inheritDoc}
     */
    public function addGroup(\FOS\UserBundle\Model\GroupInterface $group)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addGroup', [$group]);

        return parent::addGroup($group);
    }

    /**
     * {@inheritDoc}
     */
    public function removeGroup(\FOS\UserBundle\Model\GroupInterface $group)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeGroup', [$group]);

        return parent::removeGroup($group);
    }

}
